# PyPEEC default configuration file.
#
# (c) Thomas Guillod - Dartmouth College

# logging options
LOGGING_OPTIONS:
    # logger format with the following custom attributes
    #   - timestamp: current timestamp (formatted as a string)
    #   - duration: elapsed time (formatted as a string)
    FORMAT: '%(duration)s : %(name)-12s: %(levelname)-12s : %(message)s'  # logger format

    # logging level for the handlers
    LEVEL: "DEBUG"  # string with a valid Python logging level

    # indentation level for the blocks
    INDENTATION: 4  # integer with the number of spaces per indentation

    # options for coloring the log output
    COLOR: false  # use (or not) colors for the logs
    CL_DEBUG: '[38;5;247m' # terminal color code
    CL_INFO: '[38;5;15m' # terminal color code
    CL_WARNING: '[38;5;202m' # terminal color code
    CL_ERROR: '[38;5;196m' # terminal color code
    CL_CRITICAL: '[38;5;196m' # terminal color code
    CL_RESET: '[0m' # terminal color code

# FFT options
FFT_OPTIONS:
    #   - SciPy is typically faster slower but is always available
    #   - FFTW is typically faster but has to be installed separately
    SOLVER: "SciPy"  # "SciPy" or "FFTW"

    # FFT library options
    FFTS_WORKER: null  # number of workers for SciPy (null for number of CPUs)
    FFTW_THREAD: null  # number of threads for FFTW (null for number of CPUs)
    FFTW_CACHE_TIMEOUT: 100  # cache timeout in seconds for FFTW (null for no caching)
    FFTW_BYTE_ALIGN: 16  # size for byte alignment FFTW

# matrix factorization options
#   - SuperLU is typically slower but is always available
#   - UMFPACK is typically faster but has to be installed separately
MATRIX_FACTORIZATION: "SuperLU"  # "SuperLU" or "UMFPACK"

# method for dense matrix multiplication
#   - FFT for doing the multiplication with circulant tensors and FFT
#   - DIRECT for standard matrix multiplication (extremely slow and memory intensive)
MATRIX_MULTIPLICATION: "FFT"  # "FFT" or "DIRECT"
