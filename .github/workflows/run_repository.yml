# Run the "Conda tests" with the following conditions.
#   - dispatch
#   - weekly
#
# The test are run on:
#   - Linux / Ubuntu
#   - Python 3.10
#
# Two different kinds of tests are made:
#   - using the "conda_base.yaml" file
#   - using the "conda_dev.yaml" file
#
# Thomas Guillod - Dartmouth College
# Mozilla Public License Version 2.0

name: Run Repository Tests

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1"

env:
  extract: |
    pypeec examples .
  mesher: |
    pypeec mesher \
        --geometry tutorial/geometry.yaml \
        --voxel tutorial/voxel.json.gz
  solver: |
    pypeec solver \
        --voxel tutorial/voxel.json.gz \
        --problem tutorial/problem.yaml \
        --tolerance config/tolerance.yaml \
        --solution tutorial/solution.json.gz
  viewer: |
    pypeec viewer \
        --voxel tutorial/voxel.json.gz \
        --viewer config/viewer.yaml \
        --plot_mode none
  plotter: |
    pypeec plotter \
        --solution tutorial/solution.json.gz \
        --plotter config/plotter.yaml \
        --plot_mode none

jobs:
  conda:
    runs-on: "ubuntu-latest"
    timeout-minutes: 20
    steps:
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          python-version: "3.10"
          auto-activate-base: false
          activate-environment: pypeec
          use-mamba: true
      - name: Install dependencies
        shell: bash -el {0}
        run: |
          conda install --yes conda-forge::pypeec
          conda info
      - name: Run the tests
        shell: bash -el {0}
        run: |
          ${{ env.extract }}
          ${{ env.mesher }}
          ${{ env.viewer }}
          ${{ env.plotter }}
  pypi:
    runs-on: "ubuntu-latest"
    timeout-minutes: 20
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        shell: bash -el {0}
        run: |
          pip install --upgrade pip
          pip install pypeec
      - name: Run the tests
        shell: bash -el {0}
        run: |
          ${{ env.extract }}
          ${{ env.mesher }}
          ${{ env.viewer }}
          ${{ env.plotter }}
